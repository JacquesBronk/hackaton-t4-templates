<#@ template language="C#" hostspecific="true" debug="false" #>
<#@ output extension="Dockerfile" #>
<#@ assembly name="Newtonsoft.Json" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ import namespace="Newtonsoft.Json.Linq" #>

<#
  // read the appname from Definition.json
  string jsonFilePath = Host.ResolvePath("..\\..\\Definition.json");
  string jsonContent = File.ReadAllText(jsonFilePath);
  JObject data = JObject.Parse(jsonContent);

  string ProjectName = (string)data["AppName"];
#>

# AutoGenerated by Maker <#= DateTime.Now #>
FROM nginx:latest
COPY <#= ProjectName #> /etc/nginx/nginx.conf
COPY <#= ProjectName #> /etc/nginx/conf.d/default.conf

<#+
    void GenerateFrontEndDockerFile()
    {
        string appPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "FrontEnd");

        if (!Directory.Exists(appPath))
        {
            Directory.CreateDirectory(appPath);
        }

        string dockerFilePath = Path.Combine(appPath, "Dockerfile");
        using (File.Create(dockerFilePath))
        {
        }
        // Write the generated content to a separate Docker Compose file
        File.WriteAllText(dockerFilePath, this.GenerationEnvironment.ToString());
        this.GenerationEnvironment.Clear();
    }
#>