
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
using System.Collections.Generic;
using System.Linq;

// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     02/08/2025 12:37:47 +00:00
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Generated
{
    public static class CustomerEndpoints
    {
        public static void MapCustomerEndpoints(this IEndpointRouteBuilder app)
        {
            // Get All
            app.MapGet("/customers", (List<Customer> customers) =>
            {
                return Results.Ok(customers);
            });

            // Get by ID
            app.MapGet("/customers/{{id}}", (int id, List<Customer> customers) =>
            {
                var item = customers.FirstOrDefault(x => x.Id == id);
                return item != null ? Results.Ok(item) : Results.NotFound();
            });

            // Create
            app.MapPost("/customers", (Customer customer, List<Customer> customers) =>
            {
                customers.Add(customer);
                return Results.Created($"/customers/{{customer.Id}}", customer);
            });

            // Update
            app.MapPut("/customers/{{id}}", (int id, Customer updatedCustomer, List<Customer> customers) =>
            {
                var existingItem = customers.FirstOrDefault(x => x.Id == id);
                if (existingItem == null)
                {
                    return Results.NotFound();
                }

                existingItem.CustomerId = updatedCustomer.CustomerId;
                existingItem.FirstName = updatedCustomer.FirstName;
                existingItem.LastName = updatedCustomer.LastName;
                existingItem.Email = updatedCustomer.Email;
                return Results.Ok(existingItem);
            });

            // Delete
            app.MapDelete("/customers/{{id}}", (int id, List<Customer> customers) =>
            {
                var item = customers.FirstOrDefault(x => x.Id == id);
                if (item != null)
                {
                    customers.Remove(item);
                    return Results.NoContent();
                }

                return Results.NotFound();
            });
        }

        // Example In-Memory Data Source (for testing purposes)
        public static List<Customer> GetCustomers() => new List<Customer>
        {
            new Customer { Id = 1, Name = "Customer 1", Price = 10.5m * 1, Stock = 100 * 1 },
            new Customer { Id = 2, Name = "Customer 2", Price = 10.5m * 2, Stock = 100 * 2 },
            new Customer { Id = 3, Name = "Customer 3", Price = 10.5m * 3, Stock = 100 * 3 },
            new Customer { Id = 4, Name = "Customer 4", Price = 10.5m * 4, Stock = 100 * 4 },
            new Customer { Id = 5, Name = "Customer 5", Price = 10.5m * 5, Stock = 100 * 5 },
        
            };
        }

    public class Customer
    {
        public int CustomerId { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
  }
}
