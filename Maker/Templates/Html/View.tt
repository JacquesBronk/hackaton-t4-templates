<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Newtonsoft.Json" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ import namespace="Newtonsoft.Json.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Diagnostics" #>

<#@ output extension=".html" #>

<# 
    string jsonFilePath = Host.ResolvePath("..\\..\\Definition.json");
    string jsonContent = File.ReadAllText(jsonFilePath);
    JObject data = JObject.Parse(jsonContent);

    string outputBasePath = Path.GetDirectoryName(Host.TemplateFile);
      
    foreach (var page in data["DbTable"])
    {
        string title = (string)page["TableName"];

        string outputFilePath = Path.Combine(outputBasePath, $"{title}.html");
#>
    <!-- Generate an HTML file -->
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title><#= title #></title>
        <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

        <title><#= title #></title>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                fetch('http://localhost:5000/<#=title#>')
                    .then(response => response.json())
                    .then(data => {
                        const tableBody = document.getElementById('data-table');
                        data.forEach(item => {
                            const row = document.createElement('tr');
                            
                            for (const key in item) {
                                if (item.hasOwnProperty(key)) {
                                    const cell = document.createElement('td');
                                    cell.textContent = item[key];  // Assign the value as the cell content
                                    row.appendChild(cell);
                                }
                            }                            

                            tableBody.appendChild(row);
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching data:', error);
                    });
            });
        </script>

    </head>
    <body>
        <h1 class="display-4"><#= title #></h1>
        <table class="table" id="data-table">
            <thead class="thead-dark">
                <tr>
<#
    foreach (var column in page["Columns"])
    {
        string columnName = (string)column["Name"];
#><th><#= columnName #></th><#
    }
#>            
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </body>
    </html>
<# 
    // Write the generated content to a separate HTML file
    File.WriteAllText(outputFilePath, this.GenerationEnvironment.ToString());

    // Clear the T4 buffer for the next file
    this.GenerationEnvironment.Clear();

    // Optional logging
    Debug.WriteLine($"File written to: {outputFilePath}");
}
#>
